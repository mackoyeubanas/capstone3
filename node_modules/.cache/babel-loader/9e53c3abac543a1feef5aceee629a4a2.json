{"ast":null,"code":"/* Booking service APIs */\nimport axios from 'axios';\nimport UserServiceApi from './UserServiceApi';\n\nrequire('dotenv').config();\n\nconst api_url = process.env.server_url || \"https://pure-river-82205.herokuapp.com/api/bookings\";\n\nclass BookingServiceApi {\n  getNextBooking() {\n    return axios.get(`${api_url}/customers/next`, {\n      headers: {\n        authorization: UserServiceApi.getUserToken()\n      }\n    });\n  }\n\n  createBooking(booking) {\n    return axios.post(api_url, booking);\n  }\n\n  getUserBookings(userId) {\n    return axios.get(`${api_url}/customers/all/${userId}`, {\n      headers: {\n        authorization: UserServiceApi.getUserToken()\n      }\n    });\n  }\n\n  getUserBooking(bookingId) {\n    return axios.get(`${api_url}/customers/${bookingId}`, {\n      headers: {\n        authorization: UserServiceApi.getUserToken()\n      }\n    });\n  }\n\n  modifyBooking(booking) {\n    return axios.patch(`${api_url}/customers/${booking.id}`, booking);\n  }\n\n  getAllBookings() {\n    return axios.get(`${api_url}/customers/all`, {\n      headers: {\n        authorization: UserServiceApi.getUserToken()\n      }\n    });\n  }\n\n  getBooking(bookingId) {\n    return axios.get(`${api_url}/${bookingId}`, {\n      headers: {\n        authorization: UserServiceApi.getUserToken()\n      }\n    });\n  }\n\n}\n\nexport default new BookingServiceApi();","map":{"version":3,"sources":["C:/Users/Mark.Eubanas/Documents/capstone3/src/api/BookingServiceApi.js"],"names":["axios","UserServiceApi","require","config","api_url","process","env","server_url","BookingServiceApi","getNextBooking","get","headers","authorization","getUserToken","createBooking","booking","post","getUserBookings","userId","getUserBooking","bookingId","modifyBooking","patch","id","getAllBookings","getBooking"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0B,qDAA1C;;AAEA,MAAMC,iBAAN,CAAwB;AACpBC,EAAAA,cAAc,GAAG;AACb,WAAOT,KAAK,CAACU,GAAN,CAAW,GAAEN,OAAQ,iBAArB,EAAuC;AAAEO,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEX,cAAc,CAACY,YAAf;AAAjB;AAAX,KAAvC,CAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnB,WAAOf,KAAK,CAACgB,IAAN,CAAWZ,OAAX,EAAoBW,OAApB,CAAP;AACH;;AAEDE,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpB,WAAOlB,KAAK,CAACU,GAAN,CAAW,GAAEN,OAAQ,kBAAiBc,MAAO,EAA7C,EAAgD;AAAEP,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEX,cAAc,CAACY,YAAf;AAAjB;AAAX,KAAhD,CAAP;AACH;;AAEDM,EAAAA,cAAc,CAACC,SAAD,EAAY;AACtB,WAAOpB,KAAK,CAACU,GAAN,CAAW,GAAEN,OAAQ,cAAagB,SAAU,EAA5C,EAA+C;AAAET,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEX,cAAc,CAACY,YAAf;AAAjB;AAAX,KAA/C,CAAP;AACH;;AAEDQ,EAAAA,aAAa,CAACN,OAAD,EAAU;AACnB,WAAOf,KAAK,CAACsB,KAAN,CAAa,GAAElB,OAAQ,cAAaW,OAAO,CAACQ,EAAG,EAA/C,EAAkDR,OAAlD,CAAP;AACH;;AAEDS,EAAAA,cAAc,GAAG;AACb,WAAOxB,KAAK,CAACU,GAAN,CAAW,GAAEN,OAAQ,gBAArB,EAAsC;AAAEO,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEX,cAAc,CAACY,YAAf;AAAjB;AAAX,KAAtC,CAAP;AACH;;AAEDY,EAAAA,UAAU,CAACL,SAAD,EAAY;AAClB,WAAOpB,KAAK,CAACU,GAAN,CAAW,GAAEN,OAAQ,IAAGgB,SAAU,EAAlC,EAAqC;AAAET,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEX,cAAc,CAACY,YAAf;AAAjB;AAAX,KAArC,CAAP;AACH;;AA3BmB;;AA8BxB,eAAe,IAAIL,iBAAJ,EAAf","sourcesContent":["/* Booking service APIs */\r\nimport axios from 'axios';\r\nimport UserServiceApi from './UserServiceApi';\r\nrequire('dotenv').config();\r\nconst api_url = process.env.server_url || \"https://pure-river-82205.herokuapp.com/api/bookings\";\r\n\r\nclass BookingServiceApi {\r\n    getNextBooking() {\r\n        return axios.get(`${api_url}/customers/next`, { headers: { authorization: UserServiceApi.getUserToken() } });\r\n    }\r\n\r\n    createBooking(booking) {\r\n        return axios.post(api_url, booking);\r\n    }\r\n\r\n    getUserBookings(userId) {\r\n        return axios.get(`${api_url}/customers/all/${userId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\r\n    }\r\n\r\n    getUserBooking(bookingId) {\r\n        return axios.get(`${api_url}/customers/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\r\n    }\r\n\r\n    modifyBooking(booking) {\r\n        return axios.patch(`${api_url}/customers/${booking.id}`, booking);\r\n    }\r\n\r\n    getAllBookings() {\r\n        return axios.get(`${api_url}/customers/all`, { headers: { authorization: UserServiceApi.getUserToken() } });\r\n    }\r\n\r\n    getBooking(bookingId) {\r\n        return axios.get(`${api_url}/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\r\n    }\r\n}\r\n\r\nexport default new BookingServiceApi();\r\n"]},"metadata":{},"sourceType":"module"}