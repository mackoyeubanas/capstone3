{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark.Eubanas\\\\Documents\\\\Eubanas-Mark\\\\capstone 3\\\\capstone3\\\\src\\\\components\\\\bookingComponents\\\\bookingConfirmDetails.jsx\";\n\n/* Bookings confirm details page */\nimport React, { Component } from 'react';\nimport { Col, Button, Alert } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingConfirmDetailsPopUp extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleConfirmButton = event => {\n      // prevent browser from refreshing on click\n      event.preventDefault(); // generate new booking object\n\n      let newBooking = {\n        pickupTime: this.props.pickupTime,\n        returnTime: this.props.returnTime,\n        user: UserServiceApi.getLoggedInUserID(),\n        car: this.props.car._id,\n        location: this.props.car.location\n      }; // publish create booking request to backend\n\n      BookingServiceApi.createBooking(newBooking).then(res => {\n        // redirect to booking details page on success\n        window.location.href = `/mybookings/${res.data.response.booking._id}`;\n      }).catch(error => {\n        // display error message on failure\n        this.setState({\n          errorMessage: error.response.data.message\n        });\n      });\n    };\n\n    this.handleCancelButton = event => {\n      // prevent browser from refreshing on click\n      event.preventDefault();\n      this.props.togglePopUp();\n    };\n\n    this.mapOnMarkerClick = (props, marker) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.mapOnMapClick = () => this.setState({\n      showingInfoWindow: false,\n      selectedPlace: {},\n      activeMarker: {}\n    });\n\n    this.state = {\n      errorMessage: '',\n      location: {},\n      activeMarker: {},\n      showingInfoWindow: false,\n      selectedPlace: {},\n      isLoading: false\n    };\n    this.handleConfirmButton = this.handleConfirmButton.bind(this);\n    this.handleCancelButton = this.handleCancelButton.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      car\n    } = this.props; // obtain location from id\n\n    LocationServiceApi.getLocationFromId(car.location).then(res => {\n      LocationServiceApi.getGeocodeFromAddress(res.data.address).then(newRes => {\n        // Create object with address, latitude and longitude\n        let locationObject = {\n          id: res.data._id,\n          address: res.data.address,\n          name: res.data.name,\n          lat: newRes.data.results[0].geometry.location.lat,\n          lng: newRes.data.results[0].geometry.location.lng,\n          cars: res.data.cars\n        }; // set new location object to react state array\n\n        this.setState({\n          location: locationObject,\n          isLoading: true\n        });\n      });\n    });\n  }\n\n  calculateBookingCost() {\n    // cost calculation based on pickup time and return time difference\n    const pickupTimeHours = new Date(this.props.pickupTime);\n    const returnTimeHours = new Date(this.props.returnTime);\n    const timeDeltaHours = new Date(returnTimeHours - pickupTimeHours).getTime() / 3600;\n    const cost = parseInt(this.props.car.costperhour) * (timeDeltaHours / 1000);\n    return cost.toFixed(2);\n  }\n\n  render() {\n    const {\n      locations,\n      car,\n      pickupTime,\n      returnTime\n    } = this.props;\n    const cost = this.calculateBookingCost();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Booking failed!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage)), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Confirm Booking?\"), this.state.isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"garage-map\",\n      style: {\n        height: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      initialCenter: {\n        lat: this.state.location.lat,\n        lng: this.state.location.lng\n      },\n      style: {\n        height: '400px',\n        width: '400px'\n      },\n      zoom: 14,\n      onClick: this.mapOnMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      id: this.state.location.id,\n      name: this.state.location.name,\n      address: this.state.location.address,\n      onClick: this.mapOnMarkerClick,\n      position: {\n        lat: this.state.location.lat,\n        lng: this.state.location.lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, this.state.selectedPlace.address), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/locations/\" + this.state.selectedPlace.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Check out this location\"))))), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Pickup time: \"), \" \", pickupTime, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Return time: \"), \" \", returnTime, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Cost: \"), \" Php\", cost, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Location: \"), \" \", locations.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, location.id === car.location && /*#__PURE__*/React.createElement(React.Fragment, null, location.name))), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Address: \"), \" \", locations.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, location.id === car.location && /*#__PURE__*/React.createElement(React.Fragment, null, location.address))), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cars-div-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: car.image,\n      alt: \"car\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        marginTop: '1vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, car.make), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginTop: '1vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, car.driver), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, car.fueltype, \", \", car.bodytype, \", \", car.seats, \" seaters, \", car.colour), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, \"Php\", car.costperhour, \" per hour\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/locations/\" + car.locationId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 62\n      }\n    }, \"Garage Location:\"), \" \", car.location))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.handleConfirmButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"Confirm\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.handleCancelButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"Cancel\"));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API_KEY\n})(BookingConfirmDetailsPopUp);","map":{"version":3,"sources":["C:/Users/Mark.Eubanas/Documents/Eubanas-Mark/capstone 3/capstone3/src/components/bookingComponents/bookingConfirmDetails.jsx"],"names":["React","Component","Col","Button","Alert","Map","InfoWindow","Marker","GoogleApiWrapper","BookingServiceApi","UserServiceApi","LocationServiceApi","BookingConfirmDetailsPopUp","constructor","props","handleConfirmButton","event","preventDefault","newBooking","pickupTime","returnTime","user","getLoggedInUserID","car","_id","location","createBooking","then","res","window","href","data","response","booking","catch","error","setState","errorMessage","message","handleCancelButton","togglePopUp","mapOnMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","mapOnMapClick","state","isLoading","bind","componentDidMount","getLocationFromId","getGeocodeFromAddress","address","newRes","locationObject","id","name","lat","results","geometry","lng","cars","calculateBookingCost","pickupTimeHours","Date","returnTimeHours","timeDeltaHours","getTime","cost","parseInt","costperhour","toFixed","render","locations","height","google","width","onInfoWindowClose","map","image","marginTop","make","driver","fueltype","bodytype","seats","colour","locationId","apiKey","process","env","REACT_APP_API_KEY"],"mappings":"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","sourcesContent":["/* Bookings confirm details page */\r\nimport React, { Component } from 'react';\r\nimport { Col, Button, Alert } from 'react-bootstrap';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport BookingServiceApi from '../../api/BookingServiceApi';\r\nimport UserServiceApi from '../../api/UserServiceApi';\r\nimport LocationServiceApi from '../../api/LocationServiceApi';\r\n\r\nclass BookingConfirmDetailsPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            location: {},\r\n            activeMarker: {},\r\n            showingInfoWindow: false,\r\n            selectedPlace: {},\r\n            isLoading: false\r\n        };\r\n        this.handleConfirmButton = this.handleConfirmButton.bind(this);\r\n        this.handleCancelButton = this.handleCancelButton.bind(this);\r\n    }\r\n\r\n    handleConfirmButton = event => {\r\n        // prevent browser from refreshing on click\r\n        event.preventDefault();\r\n        // generate new booking object\r\n        let newBooking = {\r\n            pickupTime: this.props.pickupTime,\r\n            returnTime: this.props.returnTime,\r\n            user: UserServiceApi.getLoggedInUserID(),\r\n            car: this.props.car._id,\r\n            location: this.props.car.location,\r\n        };\r\n        // publish create booking request to backend\r\n        BookingServiceApi.createBooking(newBooking)\r\n            .then(res => {\r\n                // redirect to booking details page on success\r\n                window.location.href = `/mybookings/${res.data.response.booking._id}`;\r\n            })\r\n            .catch((error) => {\r\n                // display error message on failure\r\n                this.setState({ errorMessage: error.response.data.message });\r\n            })\r\n    };\r\n\r\n    handleCancelButton = event => {\r\n        // prevent browser from refreshing on click\r\n        event.preventDefault();\r\n        this.props.togglePopUp();\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { car } = this.props;\r\n\r\n        // obtain location from id\r\n        LocationServiceApi.getLocationFromId(car.location)\r\n            .then(res => {\r\n                LocationServiceApi.getGeocodeFromAddress(res.data.address)\r\n                    .then(newRes => {\r\n                        // Create object with address, latitude and longitude\r\n                        let locationObject = {\r\n                            id: res.data._id,\r\n                            address: res.data.address,\r\n                            name: res.data.name,\r\n                            lat: newRes.data.results[0].geometry.location.lat,\r\n                            lng: newRes.data.results[0].geometry.location.lng,\r\n                            cars: res.data.cars\r\n                        }\r\n                        // set new location object to react state array\r\n                        this.setState({\r\n                            location: locationObject,\r\n                            isLoading: true\r\n                        })\r\n                    });\r\n            });\r\n    }\r\n\r\n    mapOnMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n        });\r\n\r\n    mapOnMapClick = () =>\r\n        this.setState({\r\n            showingInfoWindow: false,\r\n            selectedPlace: {},\r\n            activeMarker: {}\r\n        });\r\n\r\n    calculateBookingCost() {\r\n        // cost calculation based on pickup time and return time difference\r\n        const pickupTimeHours = new Date(this.props.pickupTime);\r\n        const returnTimeHours = new Date(this.props.returnTime);\r\n        const timeDeltaHours = new Date(returnTimeHours - pickupTimeHours).getTime() / 3600;\r\n\r\n        const cost = parseInt(this.props.car.costperhour) * (timeDeltaHours / 1000);\r\n        return cost.toFixed(2);\r\n    }\r\n\r\n    render() {\r\n        const { locations, car, pickupTime, returnTime } = this.props;\r\n        const cost = this.calculateBookingCost();\r\n\r\n        return (<div className=\"container\">\r\n            {this.state.errorMessage && <Alert variant=\"danger\">\r\n                <Alert.Heading>Booking failed!</Alert.Heading>\r\n                <p>\r\n                    {this.state.errorMessage}\r\n                </p>\r\n            </Alert>}\r\n            <h2>Confirm Booking?</h2>\r\n            {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\r\n                <Map google={this.props.google}\r\n                    initialCenter={{\r\n                        lat: this.state.location.lat,\r\n                        lng: this.state.location.lng\r\n                    }}\r\n                    style={{ height: '400px', width: '400px' }}\r\n                    zoom={14}\r\n                    onClick={this.mapOnMapClick}>\r\n\r\n                    <Marker\r\n                        id={this.state.location.id}\r\n                        name={this.state.location.name}\r\n                        address={this.state.location.address}\r\n                        onClick={this.mapOnMarkerClick}\r\n                        position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\r\n                    />\r\n\r\n                    <InfoWindow\r\n                        onClose={this.onInfoWindowClose}\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}>\r\n                        <div id=\"info-window\">\r\n                            <h2>{this.state.selectedPlace.name}</h2>\r\n                            <p>{this.state.selectedPlace.address}</p>\r\n                            <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>}\r\n            <b>Pickup time: </b> {pickupTime} <br></br>\r\n            <b>Return time: </b> {returnTime} <br></br>\r\n            <b>Cost: </b> Php{cost} <br></br>\r\n            <b>Location: </b> {locations.map(location =>\r\n                <>\r\n                    {location.id === car.location &&\r\n                        <>\r\n                            {location.name}\r\n                        </>\r\n                    }\r\n                </>\r\n            )} <br></br>\r\n            <b>Address: </b> {locations.map(location =>\r\n                <>\r\n                    {location.id === car.location &&\r\n                        <>\r\n                            {location.address}\r\n                        </>\r\n                    }\r\n                </>\r\n            )} <br></br>\r\n            <Col sm={4}>\r\n                <div className=\"cars-div-white\">\r\n                    <img src={car.image} alt=\"car\" width=\"100\" />\r\n                    <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\r\n                    <h3 style={{ marginTop: '1vh' }}>{car.driver}</h3>\r\n                    <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\r\n                    <h5>Php{car.costperhour} per hour</h5>\r\n                    <a href={\"/locations/\" + car.locationId}><strong>Garage Location:</strong> {car.location}</a>\r\n                </div>\r\n            </Col>\r\n            <Button variant=\"success\" onClick={this.handleConfirmButton}>Confirm</Button>\r\n            <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: process.env.REACT_APP_API_KEY\r\n})(BookingConfirmDetailsPopUp);\r\n"]},"metadata":{},"sourceType":"module"}