{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark.Eubanas\\\\Documents\\\\Eubanas-Mark\\\\capstone 3\\\\capstone3\\\\src\\\\components\\\\bookingComponents\\\\filterCars.jsx\";\n\n/* Filter cars page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert, Table, Container } from 'react-bootstrap';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_SEATS, CAR_FUEL_TYPES } from '../../Constants.js';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport BookingConfirmDetailsPopUp from './bookingConfirmDetails';\n\nclass FilterCarsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmitFilter = event => {\n      event.preventDefault(); // filter available cars based on attributes specified\n\n      let newFilter = {\n        pickupTime: this.state.pickupTime,\n        returnTime: this.state.returnTime,\n        availableCars: this.state.availableCars,\n        driver: this.state.driver,\n        make: this.state.make,\n        seats: this.state.seats,\n        fueltype: this.state.fueltype,\n        colour: this.state.colour,\n        location: this.state.location,\n        bodytype: this.state.bodytype\n      }; // publish filter cars request to backend\n\n      CarServiceApi.filterCars(newFilter).then(res => {\n        this.setState({\n          availableCars: res.data.availableCars,\n          errorMessage: ''\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: error.response.data.message,\n          availableCars: []\n        });\n      });\n    };\n\n    this.state = {\n      pickupTime: '',\n      returnTime: '',\n      availableCars: [],\n      driver: '',\n      make: '',\n      seats: 'Any',\n      fueltype: 'Any',\n      colour: 'Any',\n      location: 'Any',\n      bodytype: 'Any',\n      locations: [],\n      errorMessage: '',\n      popUp: false,\n      selectedCar: ''\n    };\n    this.handleSubmitFilter = this.handleSubmitFilter.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.togglePopUp = this.togglePopUp.bind(this);\n  }\n\n  togglePopUp(car) {\n    if (this.state.popUp) car = null;\n    this.setState({\n      popUp: !this.state.popUp,\n      selectedCar: car\n    });\n  }\n\n  componentDidMount() {\n    const {\n      availableCars,\n      pickupTime,\n      returnTime\n    } = this.props; // redirect to dashboard if props don't exist\n\n    if (availableCars.length === 0 || pickupTime === '' || returnTime === '') {\n      this.props.history.push('/dashboard');\n    }\n\n    this.setState({\n      availableCars: availableCars,\n      pickupTime: pickupTime,\n      returnTime: returnTime\n    }); // obtain all locations\n\n    let locationArray = this.state.locations;\n    LocationServiceApi.getAllLocations().then(res => {\n      res.data.forEach(location => {\n        let locationObject = {\n          id: location._id,\n          address: location.address,\n          name: location.name\n        };\n        locationArray.push(locationObject);\n        this.setState({\n          locations: locationArray\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, this.state.popUp && /*#__PURE__*/React.createElement(BookingConfirmDetailsPopUp, {\n      locations: this.state.locations,\n      car: this.state.selectedCar,\n      pickupTime: this.state.pickupTime,\n      returnTime: this.state.returnTime,\n      togglePopUp: this.togglePopUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Search for a car\"), this.state.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Error filtering cars!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, this.state.errorMessage)), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmitFilter,\n      id: \"filter_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formHorizontalFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Make\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"make\",\n      type: \"text\",\n      placeholder: \"Make\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formHorizontalFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"Driver\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"driver\",\n      type: \"text\",\n      placeholder: \"Driver\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Seats\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"seats\",\n      as: \"select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Any\"), CAR_SEATS.map(carSeat => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, carSeat))))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Fuel Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"fueltype\",\n      as: \"select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Any\"), CAR_FUEL_TYPES.map(carFuel => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, carFuel))))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Body Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"bodytype\",\n      as: \"select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, \"Any\"), CAR_BODY_TYPES.map(carBodyType => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }, carBodyType))))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, \"Colour\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"colour\",\n      as: \"select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, \"Any\"), CAR_COLOURS.map(carColour => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, carColour))))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"location\",\n      as: \"select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, \"Any\"), this.state.locations.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      value: location.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, location.name + \" @ \" + location.address))))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"Filter Cars\")))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, \"Available Cars from \", this.state.pickupTime, \" till \", this.state.returnTime), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, \"Driver\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, \"Make\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, \"Seats\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, \"Body Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, \"Colour\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, \"Cost per hour\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"Fuel Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, this.state.availableCars.map(car => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, car.driver), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, car.make), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, car.seats), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, car.bodytype), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, car.colour), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, car.costperhour), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, car.fueltype), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, this.state.locations.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, location.id === car.location && /*#__PURE__*/React.createElement(React.Fragment, null, location.name)))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, this.state.locations.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, location.id === car.location && /*#__PURE__*/React.createElement(React.Fragment, null, location.address)))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.togglePopUp(car),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, \"Book\")))))));\n  }\n\n}\n\nexport default FilterCarsPage;","map":{"version":3,"sources":["C:/Users/Mark.Eubanas/Documents/Eubanas-Mark/capstone 3/capstone3/src/components/bookingComponents/filterCars.jsx"],"names":["React","Component","Form","Col","Button","Row","Alert","Table","Container","CarServiceApi","CAR_COLOURS","CAR_BODY_TYPES","CAR_SEATS","CAR_FUEL_TYPES","LocationServiceApi","BookingConfirmDetailsPopUp","FilterCarsPage","constructor","props","handleChange","event","setState","target","name","value","handleSubmitFilter","preventDefault","newFilter","pickupTime","state","returnTime","availableCars","driver","make","seats","fueltype","colour","location","bodytype","filterCars","then","res","data","errorMessage","catch","error","response","message","locations","popUp","selectedCar","bind","togglePopUp","car","componentDidMount","length","history","push","locationArray","getAllLocations","forEach","locationObject","id","_id","address","render","map","carSeat","carFuel","carBodyType","carColour","costperhour"],"mappings":"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","sourcesContent":["/* Filter cars page */\r\nimport React, { Component } from 'react';\r\nimport { Form, Col, Button, Row, Alert, Table, Container } from 'react-bootstrap';\r\nimport CarServiceApi from '../../api/CarServiceApi';\r\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_SEATS, CAR_FUEL_TYPES } from '../../Constants.js';\r\nimport LocationServiceApi from '../../api/LocationServiceApi';\r\nimport BookingConfirmDetailsPopUp from './bookingConfirmDetails';\r\n\r\nclass FilterCarsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pickupTime: '',\r\n            returnTime: '',\r\n            availableCars: [],\r\n            driver: '',\r\n            make: '',\r\n            seats: 'Any',\r\n            fueltype: 'Any',\r\n            colour: 'Any',\r\n            location: 'Any',\r\n            bodytype: 'Any',\r\n            locations: [],\r\n            errorMessage: '',\r\n            popUp: false,\r\n            selectedCar: ''\r\n        };\r\n        this.handleSubmitFilter = this.handleSubmitFilter.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.togglePopUp = this.togglePopUp.bind(this);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmitFilter = event => {\r\n        event.preventDefault();\r\n        // filter available cars based on attributes specified\r\n        let newFilter = {\r\n            pickupTime: this.state.pickupTime,\r\n            returnTime: this.state.returnTime,\r\n            availableCars: this.state.availableCars,\r\n            driver: this.state.driver,\r\n            make: this.state.make,\r\n            seats: this.state.seats,\r\n            fueltype: this.state.fueltype,\r\n            colour: this.state.colour,\r\n            location: this.state.location,\r\n            bodytype: this.state.bodytype\r\n        };\r\n        // publish filter cars request to backend\r\n        CarServiceApi.filterCars(newFilter).then(res => {\r\n            this.setState({\r\n                availableCars: res.data.availableCars,\r\n                errorMessage: ''\r\n            });\r\n        }).catch((error) => {\r\n            this.setState({ errorMessage: error.response.data.message, availableCars: [] });\r\n        });\r\n    }\r\n\r\n    togglePopUp(car) {\r\n        if (this.state.popUp)\r\n            car = null;\r\n        this.setState({\r\n            popUp: !this.state.popUp,\r\n            selectedCar: car\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { availableCars, pickupTime, returnTime } = this.props;\r\n\r\n        // redirect to dashboard if props don't exist\r\n        if (availableCars.length === 0 || pickupTime === '' || returnTime === '') {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n\r\n        this.setState({\r\n            availableCars: availableCars,\r\n            pickupTime: pickupTime,\r\n            returnTime: returnTime\r\n        });\r\n\r\n        // obtain all locations\r\n        let locationArray = this.state.locations;\r\n        LocationServiceApi.getAllLocations().then(res => {\r\n            res.data.forEach(location => {\r\n                let locationObject = {\r\n                    id: location._id,\r\n                    address: location.address,\r\n                    name: location.name\r\n                }\r\n                locationArray.push(locationObject);\r\n                this.setState({ locations: locationArray });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {this.state.popUp && <BookingConfirmDetailsPopUp locations={this.state.locations} car={this.state.selectedCar} pickupTime={this.state.pickupTime} returnTime={this.state.returnTime} togglePopUp={this.togglePopUp} />}\r\n                <h2>Search for a car</h2>\r\n                {this.state.errorMessage && <Alert variant=\"danger\">\r\n                    <Alert.Heading>Error filtering cars!</Alert.Heading>\r\n                    <p>\r\n                        {this.state.errorMessage}\r\n                    </p>\r\n                </Alert>}\r\n                <Form onSubmit={this.handleSubmitFilter} id=\"filter_form\" >\r\n                    <Form.Group controlId=\"formHorizontalFirstName\">\r\n                        <Form.Label >\r\n                            Make\r\n                        </Form.Label>\r\n                        <Form.Control name=\"make\" type=\"text\" placeholder=\"Make\" onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHorizontalFirstName\">\r\n                        <Form.Label >\r\n                            Driver\r\n                        </Form.Label>\r\n                        <Form.Control name=\"driver\" type=\"text\" placeholder=\"Driver\" onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                        <Form.Label>Seats</Form.Label>\r\n                        <Form.Control name=\"seats\" as=\"select\" onChange={this.handleChange}>\r\n                            <option>Any</option>\r\n                            {CAR_SEATS.map(carSeat =>\r\n                                <>\r\n                                    <option>{carSeat}</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                        <Form.Label>Fuel Type</Form.Label>\r\n                        <Form.Control name=\"fueltype\" as=\"select\" onChange={this.handleChange}>\r\n                            <option>Any</option>\r\n                            {CAR_FUEL_TYPES.map(carFuel =>\r\n                                <>\r\n                                    <option>{carFuel}</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                        <Form.Label>Body Type</Form.Label>\r\n                        <Form.Control name=\"bodytype\" as=\"select\" onChange={this.handleChange}>\r\n                            <option>Any</option>\r\n                            {CAR_BODY_TYPES.map(carBodyType =>\r\n                                <>\r\n                                    <option>{carBodyType}</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                        <Form.Label>Colour</Form.Label>\r\n                        <Form.Control name=\"colour\" as=\"select\" onChange={this.handleChange}>\r\n                            <option>Any</option>\r\n                            {CAR_COLOURS.map(carColour =>\r\n                                <>\r\n                                    <option>{carColour}</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control name=\"location\" as=\"select\" onChange={this.handleChange}>\r\n                            <option>Any</option>\r\n                            {this.state.locations.map(location =>\r\n                                <>\r\n                                    <option value={location.id}>{location.name + \" @ \" + location.address}</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                        <Col >\r\n                            <Button type=\"submit\">Filter Cars</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <h2>Available Cars from {this.state.pickupTime} till {this.state.returnTime}</h2>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Driver</th>\r\n                            <th>Make</th>\r\n                            <th>Seats</th>\r\n                            <th>Body Type</th>\r\n                            <th>Colour</th>\r\n                            <th>Cost per hour</th>\r\n                            <th>Fuel Type</th>\r\n                            <th>Location</th>\r\n                            <th>Address</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.availableCars.map(car =>\r\n                            <tr>\r\n                                <td>{car.driver}</td>\r\n                                <td>{car.make}</td>\r\n                                <td>{car.seats}</td>\r\n                                <td>{car.bodytype}</td>\r\n                                <td>{car.colour}</td>\r\n                                <td>{car.costperhour}</td>\r\n                                <td>{car.fueltype}</td>\r\n                                <td>\r\n                                    {this.state.locations.map(location =>\r\n                                        <>\r\n                                            {location.id === car.location &&\r\n                                                <>\r\n                                                    {location.name}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {this.state.locations.map(location =>\r\n                                        <>\r\n                                            {location.id === car.location &&\r\n                                                <>\r\n                                                    {location.address}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <Button onClick={() => this.togglePopUp(car)}>Book</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterCarsPage;\r\n"]},"metadata":{},"sourceType":"module"}