{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Microsoft\\\\Documents\\\\capstone3\\\\capstone3\\\\src\\\\components\\\\staffComponents\\\\createLocation.jsx\";\n\n/* Create location page */\nimport React, { Component } from 'react';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nexport default class CreateLocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initMap = () => {\n      this.setState({\n        gmapsLoaded: true\n      });\n    };\n\n    this.handleAutocomplete = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      // create new location handler\n      const {\n        name,\n        address\n      } = this.state;\n      event.preventDefault();\n      this.setState({\n        successMsg: \"\",\n        errMsg: \"\",\n        disableSubmit: true\n      }); // input validation\n\n      if (name === '' || address === '') {\n        this.setState({\n          errMsg: \"name and address cannot be empty\",\n          disableSubmit: false\n        });\n      } else {\n        // create new location object\n        let newLoc = {\n          name: name.trim(),\n          address: address\n        }; // publish location object to backend\n\n        LocationServiceApi.createNewLocation(newLoc).then(res => {\n          console.log(res.data);\n          this.setState({\n            successMsg: \"Location successfully added\",\n            disableSubmit: false,\n            name: '',\n            address: ''\n          });\n        }, error => {\n          this.setState({\n            errMsg: error.response.data.message,\n            disableSubmit: false\n          });\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      address: '',\n      errMsg: '',\n      gmapsLoaded: false,\n      disableSubmit: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAutocomplete = this.handleAutocomplete.bind(this);\n  }\n\n  componentDidMount() {\n    // initialise address autocomplete api\n    window.initMap = this.initMap;\n    const gmapScriptEl = document.createElement(`script`);\n    gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places&callback=initMap`;\n    document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Create Location\"), this.state.errMsg && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Add location failed!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, this.state.errMsg)), this.state.successMsg && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Add location succeed!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, this.state.successMsg)), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\",\n      type: \"name\",\n      placeholder: \"Location Name\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Enter Address\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, this.state.gmapsLoaded && /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleAutocomplete,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, getInputProps({\n      placeholder: 'Search Places ...',\n      className: 'location-search-input',\n      required: true\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 61\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 61\n        }\n      }, suggestion.description));\n    })))))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      disabled: this.state.disableSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, \"Create Location\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Microsoft/Documents/capstone3/capstone3/src/components/staffComponents/createLocation.jsx"],"names":["React","Component","LocationServiceApi","Form","Col","Button","Row","Alert","PlacesAutocomplete","CreateLocation","constructor","props","initMap","setState","gmapsLoaded","handleAutocomplete","address","handleChange","event","target","name","value","handleSubmit","state","preventDefault","successMsg","errMsg","disableSubmit","newLoc","trim","createNewLocation","then","res","console","log","data","error","response","message","bind","componentDidMount","window","gmapScriptEl","document","createElement","src","process","env","REACT_APP_API_KEY","querySelector","insertAdjacentElement","render","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","required","map","suggestion","active","style","backgroundColor","cursor","description","span","offset"],"mappings":"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","sourcesContent":["/* Create location page */\r\nimport React, { Component } from 'react'\r\nimport LocationServiceApi from '../../api/LocationServiceApi'\r\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nexport default class CreateLocation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            address: '',\r\n            errMsg: '',\r\n            gmapsLoaded: false,\r\n            disableSubmit: false,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\r\n    }\r\n\r\n    initMap = () => {\r\n        this.setState({\r\n            gmapsLoaded: true,\r\n        });\r\n    }\r\n\r\n    handleAutocomplete = address => {\r\n        this.setState({ address });\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        // create new location handler\r\n        const { name, address } = this.state;\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            successMsg: \"\",\r\n            errMsg: \"\",\r\n            disableSubmit: true\r\n        });\r\n\r\n        // input validation\r\n        if (name === '' || address === '') {\r\n            this.setState({\r\n                errMsg: \"name and address cannot be empty\",\r\n                disableSubmit: false\r\n            });\r\n        } else {\r\n            // create new location object\r\n            let newLoc = {\r\n                name: name.trim(),\r\n                address: address\r\n            };\r\n            // publish location object to backend\r\n            LocationServiceApi.createNewLocation(newLoc).then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    successMsg: \"Location successfully added\",\r\n                    disableSubmit: false,\r\n                    name: '',\r\n                    address: ''\r\n                });\r\n            }, error => {\r\n                this.setState({\r\n                    errMsg: error.response.data.message,\r\n                    disableSubmit: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // initialise address autocomplete api\r\n        window.initMap = this.initMap;\r\n        const gmapScriptEl = document.createElement(`script`);\r\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places&callback=initMap`;\r\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Create Location</h2>\r\n                {this.state.errMsg &&\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading>Add location failed!</Alert.Heading>\r\n                        <p>\r\n                            {this.state.errMsg}\r\n                        </p>\r\n                    </Alert>\r\n                }\r\n\r\n                {this.state.successMsg &&\r\n                    <Alert variant=\"success\">\r\n                        <Alert.Heading>Add location succeed!</Alert.Heading>\r\n                        <p>\r\n                            {this.state.successMsg}\r\n                        </p>\r\n                    </Alert>\r\n                }\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                        <Form.Label column sm={2} required>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control name=\"name\" type=\"name\" placeholder=\"Location Name\" onChange={this.handleChange} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                        <Form.Label column sm={2}>\r\n                            Enter Address\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            {this.state.gmapsLoaded &&\r\n                                <PlacesAutocomplete\r\n                                    value={this.state.address}\r\n                                    onChange={this.handleAutocomplete}\r\n                                    onSelect={this.handleSelect}\r\n                                >\r\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                        <div>\r\n                                            <Form.Control\r\n                                                {...getInputProps({\r\n                                                    placeholder: 'Search Places ...',\r\n                                                    className: 'location-search-input',\r\n                                                    required: true\r\n                                                })}\r\n                                            />\r\n                                            <div className=\"autocomplete-dropdown-container\">\r\n                                                {loading && <div>Loading...</div>}\r\n                                                {suggestions.map(suggestion => {\r\n                                                    const className = suggestion.active\r\n                                                        ? 'suggestion-item--active'\r\n                                                        : 'suggestion-item';\r\n                                                    // inline style for demonstration purpose\r\n                                                    const style = suggestion.active\r\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                    return (\r\n                                                        <div\r\n                                                            {...getSuggestionItemProps(suggestion, {\r\n                                                                className,\r\n                                                                style,\r\n                                                            })}\r\n                                                        >\r\n                                                            <span>{suggestion.description}</span>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </PlacesAutocomplete>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Create Location</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}