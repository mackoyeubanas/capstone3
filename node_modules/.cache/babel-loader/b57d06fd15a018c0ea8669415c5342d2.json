{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Microsoft\\\\Documents\\\\capstone3\\\\capstone3\\\\src\\\\components\\\\map.jsx\";\n\n/* Location/Map page */\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport \"../styles/map.css\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.mapOnMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.mapOnMapClick = () => this.setState({\n      showingInfoWindow: false,\n      selectedPlace: {},\n      activeMarker: {}\n    });\n\n    this.state = {\n      locations: [],\n      activeMarker: {},\n      showingInfoWindow: false,\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    // obtain all locations\n    let location_array = this.state.locations; // Get all locations from backend\n\n    LocationServiceApi.getAllLocations().then(res => {\n      const data = res.data; // Iterate through each address and get latitude and longitude\n\n      data.forEach(element => {\n        LocationServiceApi.getGeocodeFromAddress(element.address).then(res => {\n          // Create object with address, latitude and longitude\n          let object = {\n            id: element._id,\n            address: element.address,\n            name: element.name,\n            lat: res.data.results[0].geometry.location.lat,\n            lng: res.data.results[0].geometry.location.lng,\n            cars: element.cars\n          }; // Push address, lat, long as object to react state array\n\n          location_array.push(object);\n          this.setState({\n            locations: location_array\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      initialCenter: {\n        lat: 14.5907332,\n        lng: 120.9809674\n      },\n      zoom: 14,\n      style: mapStyles,\n      onClick: this.mapOnMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.state.locations.map(marker => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        id: marker.id,\n        name: marker.name,\n        address: marker.address,\n        onClick: this.mapOnMarkerClick,\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, this.state.selectedPlace.address), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/locations/\" + this.state.selectedPlace.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Check out this location\")))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API_KEY\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/Microsoft/Documents/capstone3/capstone3/src/components/map.jsx"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","LocationServiceApi","mapStyles","width","height","MapContainer","Component","constructor","props","mapOnMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","mapOnMapClick","state","locations","componentDidMount","location_array","getAllLocations","then","res","data","forEach","element","getGeocodeFromAddress","address","object","id","_id","name","lat","results","geometry","location","lng","cars","push","render","google","map","onInfoWindowClose","apiKey","process","env","REACT_APP_API_KEY"],"mappings":"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","sourcesContent":["/* Location/Map page */\r\nimport React from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport LocationServiceApi from '../api/LocationServiceApi.js';\r\nimport \"../styles/map.css\";\r\n\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\n\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locations: [],\r\n      activeMarker: {},\r\n      showingInfoWindow: false,\r\n      selectedPlace: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // obtain all locations\r\n    let location_array = this.state.locations;\r\n    // Get all locations from backend\r\n    LocationServiceApi.getAllLocations().then(res => {\r\n      const data = res.data;\r\n      // Iterate through each address and get latitude and longitude\r\n      data.forEach(element => {\r\n        LocationServiceApi.getGeocodeFromAddress(element.address)\r\n          .then(res => {\r\n            // Create object with address, latitude and longitude\r\n            let object = {\r\n              id: element._id,\r\n              address: element.address,\r\n              name: element.name,\r\n              lat: res.data.results[0].geometry.location.lat,\r\n              lng: res.data.results[0].geometry.location.lng,\r\n              cars: element.cars\r\n            };\r\n            // Push address, lat, long as object to react state array\r\n            location_array.push(object);\r\n            this.setState({\r\n              locations: location_array\r\n            });\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  mapOnMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  mapOnMapClick = () =>\r\n    this.setState({\r\n      showingInfoWindow: false,\r\n      selectedPlace: {},\r\n      activeMarker: {}\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Map google={this.props.google}\r\n          initialCenter={{\r\n            lat: 14.5907332,\r\n            lng: 120.9809674\r\n          }}\r\n          zoom={14}\r\n          style={mapStyles}\r\n          onClick={this.mapOnMapClick}>\r\n\r\n          {this.state.locations.map(marker => {\r\n            return (\r\n              <Marker\r\n                id={marker.id}\r\n                name={marker.name}\r\n                address={marker.address}\r\n                onClick={this.mapOnMarkerClick}\r\n                position={{ lat: marker.lat, lng: marker.lng }}\r\n              />)\r\n          })}\r\n\r\n          <InfoWindow\r\n            onClose={this.onInfoWindowClose}\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}>\r\n            <div id=\"info-window\">\r\n              <h2>{this.state.selectedPlace.name}</h2>\r\n              <p>{this.state.selectedPlace.address}</p>\r\n              <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\r\n            </div>\r\n          </InfoWindow>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_API_KEY\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}