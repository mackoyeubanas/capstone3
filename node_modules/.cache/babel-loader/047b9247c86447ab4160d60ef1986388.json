{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark.Eubanas\\\\Documents\\\\capstone3\\\\src\\\\components\\\\staffComponents\\\\modifyCustomerDetails.jsx\";\n\n/* Modify customer details page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Col, Row } from 'react-bootstrap';\n\nconst {\n  default: UserServiceApi\n} = require(\"../../api/UserServiceApi\");\n\nexport default class ModifyCustomerDetailsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      // modify customer details handler\n      event.preventDefault();\n      let modifiedCustomer = this.state.customer; // input validation\n\n      if (this.state.firstname.trim() !== '') modifiedCustomer.firstname = this.state.firstname.trim();else return this.setState({\n        modifyErrorMessage: \"First name shall not be empty\"\n      });\n      if (this.state.lastname.trim() !== '') modifiedCustomer.lastname = this.state.lastname.trim();else return this.setState({\n        modifyErrorMessage: \"Last name shall not be empty\"\n      });\n\n      if (this.state.email.trim() !== '') {\n        let checkEmailExistsPayload = {\n          email: this.state.email.trim()\n        }; // check if modified email exists\n\n        UserServiceApi.checkEmailExists(checkEmailExistsPayload).then(res => {\n          if (!res.data.exist || this.state.email === this.state.customer.email) {\n            modifiedCustomer.email = this.state.email.trim(); // publish modified customer to backend\n\n            UserServiceApi.updateUser(modifiedCustomer).then(res => {\n              return window.location.href = `/admin/view/customers/${this.state.customer._id}`;\n            }).catch(error => {\n              return this.setState({\n                modifyErrorMessage: error.response.data.message\n              });\n            });\n          } else {\n            return this.setState({\n              modifyErrorMessage: \"Email already exists! Please revert or try another one.\"\n            });\n          }\n        }).catch(() => {\n          return this.setState({\n            modifyErrorMessage: \"Error checking if email exists!\"\n          });\n        });\n      } else return this.setState({\n        modifyErrorMessage: \"Email shall not be empty\"\n      });\n    };\n\n    this.state = {\n      customer: {},\n      firstname: '',\n      lastname: '',\n      email: '',\n      fetchErrorMessage: '',\n      modifyErrorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    // fetch user by id\n    UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\n      this.setState({\n        firstname: res.data.user.firstname,\n        lastname: res.data.user.lastname,\n        email: res.data.user.email,\n        id: res.data.user._id,\n        customer: res.data.user\n      });\n    }).catch(error => {\n      this.setState({\n        fetchErrorMessage: error.response.data.message\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.state.fetchErrorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Error fetching customer details!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, this.state.fetchErrorMessage)), this.state.modifyErrorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Error modifying customer details!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, this.state.modifyErrorMessage)), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Modify Customer Details\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Customer ID:\"), \" \", this.state.customer._id, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"firstname\",\n      type: \"text\",\n      value: this.state.firstname,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"lastname\",\n      type: \"text\",\n      value: this.state.lastname,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Modify User\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      href: `/admin/view/customers/${this.state.customer._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"Cancel\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Mark.Eubanas/Documents/capstone3/src/components/staffComponents/modifyCustomerDetails.jsx"],"names":["React","Component","Alert","Button","Form","Col","Row","default","UserServiceApi","require","ModifyCustomerDetailsPage","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","modifiedCustomer","state","customer","firstname","trim","modifyErrorMessage","lastname","email","checkEmailExistsPayload","checkEmailExists","then","res","data","exist","updateUser","window","location","href","_id","catch","error","response","message","fetchErrorMessage","componentDidMount","getUserFromId","match","params","id","user","render","span","offset"],"mappings":"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","sourcesContent":["/* Modify customer details page */\r\nimport React, { Component } from 'react';\r\nimport { Alert, Button, Form, Col, Row } from 'react-bootstrap';\r\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\r\n\r\nexport default class ModifyCustomerDetailsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customer: {},\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            fetchErrorMessage: '',\r\n            modifyErrorMessage: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // fetch user by id\r\n        UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\r\n            this.setState({\r\n                firstname: res.data.user.firstname,\r\n                lastname: res.data.user.lastname,\r\n                email: res.data.user.email,\r\n                id: res.data.user._id,\r\n                customer: res.data.user\r\n            });\r\n        }).catch((error) => {\r\n            this.setState({ fetchErrorMessage: error.response.data.message });\r\n        });\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // modify customer details handler\r\n        event.preventDefault();\r\n        let modifiedCustomer = this.state.customer;\r\n        // input validation\r\n        if (this.state.firstname.trim() !== '')\r\n            modifiedCustomer.firstname = this.state.firstname.trim();\r\n        else\r\n            return this.setState({ modifyErrorMessage: \"First name shall not be empty\" });\r\n        if (this.state.lastname.trim() !== '')\r\n            modifiedCustomer.lastname = this.state.lastname.trim();\r\n        else\r\n            return this.setState({ modifyErrorMessage: \"Last name shall not be empty\" });\r\n        if (this.state.email.trim() !== '') {\r\n            let checkEmailExistsPayload = {\r\n                email: this.state.email.trim()\r\n            }\r\n            // check if modified email exists\r\n            UserServiceApi.checkEmailExists(checkEmailExistsPayload).then(res => {\r\n                if (!(res.data.exist) || (this.state.email === this.state.customer.email)) {\r\n                    modifiedCustomer.email = this.state.email.trim();\r\n                    // publish modified customer to backend\r\n                    UserServiceApi.updateUser(modifiedCustomer).then(res => {\r\n                        return window.location.href = `/admin/view/customers/${this.state.customer._id}`;\r\n                    }).catch((error) => {\r\n                        return this.setState({ modifyErrorMessage: error.response.data.message });\r\n                    })\r\n                } else {\r\n                    return this.setState({ modifyErrorMessage: \"Email already exists! Please revert or try another one.\" });\r\n                }\r\n            }).catch(() => {\r\n                return this.setState({ modifyErrorMessage: \"Error checking if email exists!\" });\r\n            })\r\n        }\r\n        else\r\n            return this.setState({ modifyErrorMessage: \"Email shall not be empty\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.fetchErrorMessage && <Alert variant=\"danger\">\r\n                    <Alert.Heading>Error fetching customer details!</Alert.Heading>\r\n                    <p>\r\n                        {this.state.fetchErrorMessage}\r\n                    </p>\r\n                </Alert>}\r\n                {this.state.modifyErrorMessage && <Alert variant=\"danger\">\r\n                    <Alert.Heading>Error modifying customer details!</Alert.Heading>\r\n                    <p>\r\n                        {this.state.modifyErrorMessage}\r\n                    </p>\r\n                </Alert>}\r\n                <h2>Modify Customer Details</h2>\r\n                <strong>Customer ID:</strong> {this.state.customer._id} <br></br>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\r\n                        <Form.Label column sm={2}>\r\n                            First Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control name=\"firstname\" type=\"text\" value={this.state.firstname} onChange={this.handleChange} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\r\n                        <Form.Label column sm={2}>\r\n                            Last Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control name=\"lastname\" type=\"text\" value={this.state.lastname} onChange={this.handleChange} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                            Email\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button onClick={this.handleSubmit}>Modify User</Button>\r\n                            <Button variant=\"danger\" href={`/admin/view/customers/${this.state.customer._id}`}>Cancel</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}