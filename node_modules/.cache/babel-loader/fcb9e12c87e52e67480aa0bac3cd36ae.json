{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark.Eubanas\\\\Documents\\\\capstone3\\\\src\\\\components\\\\locationShow.jsx\";\n\n/* Location show page */\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport CarServiceApi from '../api/CarServiceApi.js';\nimport \"../styles/map.css\";\n\nclass LocationShowPage extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      location: {},\n      cars: [],\n      activeMarker: {},\n      showingInfoWindow: false,\n      selectedPlace: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    // obtain location id from url parameters\n    let url = this.props.match.url;\n    let location_id = url.split(\"/\")[2]; // Get location from id\n\n    LocationServiceApi.getLocationFromId(location_id).then(res => {\n      LocationServiceApi.getGeocodeFromAddress(res.data.address).then(newRes => {\n        // Create object with address, latitude and longitude\n        let locationObject = {\n          id: res.data._id,\n          address: res.data.address,\n          name: res.data.name,\n          lat: newRes.data.results[0].geometry.location.lat,\n          lng: newRes.data.results[0].geometry.location.lng,\n          cars: res.data.cars\n        }; // set new location object to react state array\n\n        this.setState({\n          location: locationObject,\n          isLoading: true\n        });\n      });\n      res.data.cars.forEach(carId => {\n        CarServiceApi.getCar(carId).then(res => {\n          this.state.cars.push(res.data.car);\n          this.setState({\n            cars: this.state.cars\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        'padding': '1vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Welcome to one of our locations\"), /*#__PURE__*/React.createElement(Button, {\n      href: \"/locations\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Back to the map\")), this.state.isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"garage-map\",\n      style: {\n        height: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      initialCenter: {\n        lat: this.state.location.lat,\n        lng: this.state.location.lng\n      },\n      style: {\n        height: '400px',\n        width: '400px'\n      },\n      zoom: 14,\n      onClick: this.mapOnMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      id: this.state.location.id,\n      name: this.state.location.name,\n      address: this.state.location.address,\n      onClick: this.mapOnMarkerClick,\n      position: {\n        lat: this.state.location.lat,\n        lng: this.state.location.lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, this.state.selectedPlace.address), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/locations/\" + this.state.selectedPlace.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, \"Check out this location\"))))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.state.location.name), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Address: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, this.state.location.address), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Number of cars: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, this.state.cars.length), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Cars at this location:\"), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      id: \"car-show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, this.state.cars.map(car => /*#__PURE__*/React.createElement(CarDescriptionComponent, {\n      car: car,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nfunction CarDescriptionComponent(props) {\n  // car description component card\n  const {\n    car\n  } = props;\n  return /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cars-div-white\",\n    style: {\n      'border': 'solid black 2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: car.image,\n    alt: \"car\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '1vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, car.make), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: '1vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, car.driver), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, car.fueltype, \", \", car.bodytype, \", \", car.seats, \" seaters, \", car.colour), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Php\", car.costperhour, \" per hour\")));\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API_KEY\n})(LocationShowPage);","map":{"version":3,"sources":["C:/Users/Mark.Eubanas/Documents/capstone3/src/components/locationShow.jsx"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","Jumbotron","Button","Container","Row","Col","LocationServiceApi","CarServiceApi","LocationShowPage","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","location","cars","isLoading","componentDidMount","url","match","location_id","split","getLocationFromId","then","res","getGeocodeFromAddress","data","address","newRes","locationObject","id","_id","name","lat","results","geometry","lng","forEach","carId","getCar","push","car","render","height","google","width","mapOnMapClick","mapOnMarkerClick","onInfoWindowClose","length","map","CarDescriptionComponent","image","marginTop","make","driver","fueltype","bodytype","seats","colour","costperhour","apiKey","process","env","REACT_APP_API_KEY"],"mappings":"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","sourcesContent":["/* Location show page */\r\nimport React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport LocationServiceApi from '../api/LocationServiceApi.js';\r\nimport CarServiceApi from '../api/CarServiceApi.js';\r\nimport \"../styles/map.css\";\r\n\r\nclass LocationShowPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: {},\r\n            cars: [],\r\n            activeMarker: {},\r\n            showingInfoWindow: false,\r\n            selectedPlace: {},\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // obtain location id from url parameters\r\n        let url = this.props.match.url;\r\n        let location_id = url.split(\"/\")[2];\r\n        // Get location from id\r\n        LocationServiceApi.getLocationFromId(location_id).then(res => {\r\n            LocationServiceApi.getGeocodeFromAddress(res.data.address)\r\n                .then(newRes => {\r\n                    // Create object with address, latitude and longitude\r\n                    let locationObject = {\r\n                        id: res.data._id,\r\n                        address: res.data.address,\r\n                        name: res.data.name,\r\n                        lat: newRes.data.results[0].geometry.location.lat,\r\n                        lng: newRes.data.results[0].geometry.location.lng,\r\n                        cars: res.data.cars\r\n                    };\r\n                    // set new location object to react state array\r\n                    this.setState({\r\n                        location: locationObject,\r\n                        isLoading: true\r\n                    });\r\n                });\r\n            res.data.cars.forEach(carId => {\r\n                CarServiceApi.getCar(carId).then(res => {\r\n                    this.state.cars.push(res.data.car);\r\n                    this.setState({\r\n                        cars: this.state.cars\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n         onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n          selectedPlace: props,\r\n          activeMarker: marker,\r\n          showingInfoWindow: true\r\n        });\r\n\r\n      onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{ 'padding': '1vh' }}>\r\n                <Jumbotron>\r\n                    <h2>Welcome to one of our locations</h2>\r\n                    <Button href=\"/locations\" variant=\"primary\">Back to the map</Button>\r\n                </Jumbotron>\r\n                {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\r\n                    <Map google={this.props.google}\r\n                        initialCenter={{\r\n                            lat: this.state.location.lat,\r\n                            lng: this.state.location.lng\r\n                        }}\r\n                        style={{ height: '400px', width: '400px' }}\r\n                        zoom={14}\r\n                        onClick={this.mapOnMapClick}>\r\n\r\n                        <Marker\r\n                            id={this.state.location.id}\r\n                            name={this.state.location.name}\r\n                            address={this.state.location.address}\r\n                            onClick={this.mapOnMarkerClick}\r\n                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\r\n                        />\r\n\r\n                        <InfoWindow\r\n                            onClose={this.onInfoWindowClose}\r\n                            marker={this.state.activeMarker}\r\n                            visible={this.state.showingInfoWindow}>\r\n                            <div id=\"info-window\">\r\n                                <h2>{this.state.selectedPlace.name}</h2>\r\n                                <p>{this.state.selectedPlace.address}</p>\r\n                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                </div>}\r\n                <h3>{this.state.location.name}</h3>\r\n                <strong>Address: </strong>\r\n                <p>{this.state.location.address}</p>\r\n                <strong>Number of cars: </strong>\r\n                <p>{this.state.cars.length}</p>\r\n                <strong>Cars at this location:</strong>\r\n                <Container fluid id=\"car-show\">\r\n                    <Row>\r\n                        {this.state.cars.map(car =>\r\n                            <CarDescriptionComponent car={car} />\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CarDescriptionComponent(props) {\r\n    // car description component card\r\n    const { car } = props\r\n    return (\r\n        <Col sm={4}>\r\n            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\r\n                <img src={car.image} alt=\"car\" width=\"100\" />\r\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\r\n                <h3 style={{ marginTop: '1vh' }}>{car.driver}</h3>\r\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\r\n                <h5>Php{car.costperhour} per hour</h5>\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: process.env.REACT_APP_API_KEY\r\n})(LocationShowPage);\r\n"]},"metadata":{},"sourceType":"module"}