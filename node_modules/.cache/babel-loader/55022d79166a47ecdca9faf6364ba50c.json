{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Microsoft\\\\Documents\\\\capstone3\\\\capstone3\\\\src\\\\components\\\\staffComponents\\\\modifyLocationPage.jsx\";\n\n/* Modify location page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { withRouter } from 'react-router-dom';\n\nclass modifyLocationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initMap = () => {\n      this.setState({\n        gmapsLoaded: true\n      });\n    };\n\n    this.handleAutocomplete = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      location: '',\n      address: '',\n      name: '',\n      errMsg: '',\n      gmapsLoaded: false,\n      successMsg: '',\n      disableSubmit: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAutocomplete = this.handleAutocomplete.bind(this);\n  }\n\n  componentDidMount() {\n    // initialise address autocomplete api\n    window.initMap = this.initMap;\n    const gmapScriptEl = document.createElement(`script`);\n    gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places&callback=initMap`;\n    document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n    LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\n      this.setState({\n        address: res.data.address,\n        name: res.data.name,\n        location: res.data\n      });\n    }).catch(err => {\n      this.setState({\n        errMsg: err.response\n      });\n    });\n  }\n\n  handleSubmit() {\n    // modify location object handler\n    // input validation\n    if (this.state.name === '') {\n      this.setState({\n        errMsg: \"name can't be empty\"\n      });\n      return;\n    }\n\n    this.setState({\n      disableSubmit: true\n    }); // create modified location object\n\n    let location = {\n      _id: this.state.location._id,\n      name: this.state.name,\n      address: this.state.address,\n      cars: this.state.location.cars\n    }; // publish modified location object to backend\n\n    LocationServiceApi.updateLocation(location).then(res => {\n      this.props.history.push(`/admin/view/location/${location._id}`, {\n        success: \"Successfully updated location\"\n      });\n    }).catch(err => {\n      this.setState({\n        errMsg: err.response.data.message,\n        disableSubmit: false,\n        successMsg: \"\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Modify Location Details\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Location ID:\"), \" \", this.state.location._id, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 73\n      }\n    }), this.state.errMsg && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Modify location failed!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, this.state.errMsg)), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Enter Address\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, this.state.gmapsLoaded && /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleAutocomplete,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, getInputProps({\n      placeholder: 'Search Places ...',\n      className: 'location-search-input',\n      required: true\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 49\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 45\n        }\n      }, suggestion.description));\n    })))))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      disabled: this.state.disableSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, \"Update Location\")))));\n  }\n\n}\n\nexport default withRouter(modifyLocationPage);","map":{"version":3,"sources":["C:/Users/Microsoft/Documents/capstone3/capstone3/src/components/staffComponents/modifyLocationPage.jsx"],"names":["React","Component","Alert","Button","Form","Container","Col","Row","LocationServiceApi","PlacesAutocomplete","withRouter","modifyLocationPage","constructor","props","initMap","setState","gmapsLoaded","handleAutocomplete","address","handleChange","event","target","name","value","state","location","errMsg","successMsg","disableSubmit","bind","handleSubmit","componentDidMount","window","gmapScriptEl","document","createElement","src","process","env","REACT_APP_API_KEY","querySelector","insertAdjacentElement","getLocationFromId","match","params","id","then","res","data","catch","err","response","_id","cars","updateLocation","history","push","success","message","render","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","required","map","suggestion","active","style","backgroundColor","cursor","description","span","offset"],"mappings":"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","sourcesContent":["/* Modify location page */\r\nimport React, { Component } from 'react';\r\nimport { Alert, Button, Form, Container, Col, Row } from 'react-bootstrap';\r\nimport LocationServiceApi from '../../api/LocationServiceApi';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass modifyLocationPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: '',\r\n            address: '',\r\n            name: '',\r\n            errMsg: '',\r\n            gmapsLoaded: false,\r\n            successMsg: '',\r\n            disableSubmit: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\r\n    }\r\n\r\n    initMap = () => {\r\n        this.setState({\r\n          gmapsLoaded: true,\r\n        });\r\n    }\r\n\r\n    handleAutocomplete = address => {\r\n        this.setState({ address });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // initialise address autocomplete api\r\n        window.initMap = this.initMap;\r\n        const gmapScriptEl = document.createElement(`script`);\r\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places&callback=initMap`;\r\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\r\n        LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\r\n            this.setState({\r\n                address: res.data.address,\r\n                name: res.data.name,\r\n                location: res.data\r\n            })\r\n        }).catch(err => {\r\n            this.setState({\r\n                errMsg: err.response\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit() {\r\n        // modify location object handler\r\n        // input validation\r\n        if(this.state.name === '') {\r\n            this.setState({\r\n                errMsg: \"name can't be empty\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            disableSubmit: true\r\n        });\r\n        \r\n        // create modified location object\r\n        let location = {\r\n            _id: this.state.location._id,\r\n            name: this.state.name,\r\n            address: this.state.address,\r\n            cars: this.state.location.cars\r\n        };\r\n\r\n        // publish modified location object to backend\r\n        LocationServiceApi.updateLocation(location).then(res => {\r\n            this.props.history.push(`/admin/view/location/${location._id}`, {success: \"Successfully updated location\"});\r\n        }).catch(err => {\r\n            this.setState({\r\n                errMsg: err.response.data.message,\r\n                disableSubmit: false,\r\n                successMsg: \"\"\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2>Modify Location Details</h2>\r\n                <strong>Location ID:</strong> {this.state.location._id} <br></br>\r\n                \r\n                {this.state.errMsg && \r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading>Modify location failed!</Alert.Heading>\r\n                        <p>\r\n                            {this.state.errMsg}\r\n                        </p>\r\n                    </Alert>\r\n                }\r\n\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\r\n                        <Form.Label column sm={2}>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} required/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                        <Form.Label column sm={2}>\r\n                            Enter Address\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        { this.state.gmapsLoaded &&\r\n                            <PlacesAutocomplete\r\n                                value={this.state.address}\r\n                                onChange={this.handleAutocomplete}\r\n                                onSelect={this.handleSelect}\r\n                            >\r\n                                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                <div>\r\n                                    <Form.Control\r\n                                    {...getInputProps({\r\n                                        placeholder: 'Search Places ...',\r\n                                        className: 'location-search-input',\r\n                                        required: true\r\n                                    })}\r\n                                    />\r\n                                    <div className=\"autocomplete-dropdown-container\">\r\n                                    {loading && <div>Loading...</div>}\r\n                                    {suggestions.map(suggestion => {\r\n                                        const className = suggestion.active\r\n                                        ? 'suggestion-item--active'\r\n                                        : 'suggestion-item';\r\n                                        // inline style for demonstration purpose\r\n                                        const style = suggestion.active\r\n                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                        return (\r\n                                        <div\r\n                                            {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                            style,\r\n                                            })}\r\n                                        >\r\n                                            <span>{suggestion.description}</span>\r\n                                        </div>\r\n                                        );\r\n                                    })}\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                            </PlacesAutocomplete>\r\n                        }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Update Location</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(modifyLocationPage);\r\n"]},"metadata":{},"sourceType":"module"}